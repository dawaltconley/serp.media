---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogTagRobots, fetchPosts, blogPostsPerPage, mapByTag } from '~/utils/blog';
import { getPermalink, cleanSlug } from '~/utils/permalinks';
import { mapBy } from '~/utils/utils';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await fetchPosts();
  const byCategory = mapBy(posts, (p) => p.category);
  const byCategoryTag = new Map([...byCategory].map(([cat, posts]) => [cat, mapByTag(posts)]));
  return [...byCategoryTag].flatMap(([category, byTag]) =>
    [...byTag.values()].flatMap(({ tag, posts }) =>
      paginate(posts, {
        params: { blog: category?.toLowerCase(), tag: tag.toLowerCase() },
        props: { tag },
        pageSize: blogPostsPerPage,
      })
    )
  );
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, tag } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

const metadata = {
  title: `Posts by tag '${tag}'${currentPage > 1 ? ` â€” Page ${currentPage} ` : ''}`,
  robots: {
    index: blogTagRobots?.index,
    follow: blogTagRobots?.follow,
  },
};
---

<Layout metadata={metadata}>
  <section class="px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline>Tag: {tag}</Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
